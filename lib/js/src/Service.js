// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Fetch = require("bs-fetch/lib/js/src/Fetch.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Config$SwpWalletSdk = require("./Config.js");

((require("cross-fetch/polyfill")));

function make(prim, prim$1, prim$2, _) {
  var tmp = { };
  if (prim) {
    tmp.code = prim[0];
  }
  if (prim$1) {
    tmp.message = prim$1[0];
  }
  if (prim$2) {
    tmp.field_errors = prim$2[0];
  }
  return tmp;
}

var $$Error = /* module */[/* make */make];

var Response = /* module */[];

var Api = /* module */[
  /* Error */$$Error,
  /* Response */Response
];

function make$1(prim, prim$1, prim$2, prim$3, _) {
  var tmp = {
    message: prim
  };
  if (prim$1) {
    tmp.code = prim$1[0];
  }
  if (prim$2) {
    tmp.statusCode = prim$2[0];
  }
  if (prim$3) {
    tmp.fieldErrors = prim$3[0];
  }
  return tmp;
}

var SdkError = /* module */[/* make */make$1];

function handleResponse(res) {
  if (res.status === 204) {
    return Promise.resolve(null);
  } else {
    return res.json().then((function (body) {
                    var error = body.error;
                    if (error !== undefined) {
                      var match = error.message;
                      var message = match !== undefined ? match : res.statusText;
                      return Promise.reject(make$1(message, Js_primitive.undefined_to_opt(error.code), /* Some */[res.status], Js_primitive.undefined_to_opt(error.field_errors), /* () */0));
                    } else {
                      return Promise.resolve(body.data);
                    }
                  })).catch((function (err) {
                  return Promise.reject(err);
                }));
  }
}

function handleError($staropt$star, errorResponse) {
  var debug = $staropt$star ? $staropt$star[0] : false;
  if (debug) {
    var errorLog = JSON.stringify(errorResponse);
    if (errorLog !== undefined) {
      console.log(errorLog);
    }
    
  }
  return Promise.reject(errorResponse);
}

function handleRequest(debug, req) {
  var partial_arg = /* Some */[debug];
  return req.then(handleResponse).catch((function (param) {
                return handleError(partial_arg, param);
              }));
}

function get(headers, $staropt$star, $staropt$star$1, path) {
  var debug = $staropt$star ? $staropt$star[0] : false;
  var sandbox = $staropt$star$1 ? $staropt$star$1[0] : false;
  return handleRequest(debug, fetch((
                  sandbox ? Config$SwpWalletSdk.sandboxHost : Config$SwpWalletSdk.host
                ) + path, Fetch.RequestInit[/* make */0](/* None */0, /* Some */[headers], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* () */0)));
}

function post(headers, body, $staropt$star, $staropt$star$1, path) {
  var debug = $staropt$star ? $staropt$star[0] : false;
  var sandbox = $staropt$star$1 ? $staropt$star$1[0] : false;
  var strBody;
  if (body) {
    var match = JSON.stringify(body[0]);
    strBody = match !== undefined ? match : "";
  } else {
    strBody = "";
  }
  return handleRequest(debug, fetch((
                  sandbox ? Config$SwpWalletSdk.sandboxHost : Config$SwpWalletSdk.host
                ) + path, Fetch.RequestInit[/* make */0](/* Some */[/* Post */2], /* Some */[headers], /* Some */[strBody], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* () */0)));
}

var host = Config$SwpWalletSdk.host;

var sandboxHost = Config$SwpWalletSdk.sandboxHost;

exports.host = host;
exports.sandboxHost = sandboxHost;
exports.Api = Api;
exports.SdkError = SdkError;
exports.handleResponse = handleResponse;
exports.handleError = handleError;
exports.handleRequest = handleRequest;
exports.get = get;
exports.post = post;
/*  Not a pure module */
